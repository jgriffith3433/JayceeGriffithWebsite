upstream fe {
    server client:9000;
}

upstream be {
    server api:5000;
}

map $http_upgrade $connection_upgrade{
		default upgrade;
		`` close;
}

server {
    listen 80;
	listen [::]:80;
	
	server_name jayceegriffith.com www.jayceegriffith.com;
    server_tokens off;
	
    # set DNS resolver as Docker internal DNS
    resolver 127.0.0.11 valid=10s;
    resolver_timeout 5s;
    
    # set client body size to 100 MB #
    client_max_body_size 100M;


    location / {
        # prevent dns caching and force nginx to make a dns lookup on each request.
        #set $target1 http://fe;
        #proxy_pass $target1;
		return 301 https://$host$request_uri;
    }
	
	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
    }

    location /api {
        # prevent dns caching and force nginx to make a dns lookup on each request.
        set $target1 http://be;
        proxy_pass $target1;
    }
	
    location /hub {
        # prevent dns caching and force nginx to make a dns lookup on each request.
        set $target1 http://be;
        proxy_pass $target1;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
    }
}

server {
	# listen 80;
	# listen [::]:80;

    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;
	
	server_name jayceegriffith.com www.jayceegriffith.com;
    #server_tokens off;
	
    # set DNS resolver as Docker internal DNS
    resolver 127.0.0.11 valid=10s;
    resolver_timeout 5s;
    
    # set client body size to 100 MB #
    client_max_body_size 100M;


    location / {
        # prevent dns caching and force nginx to make a dns lookup on each request.
        set $target1 http://fe;
        proxy_pass $target1;
        #return 301 https://jayceegriffith.com$request_uri;
    }
	
	#location /.well-known/acme-challenge/ {
	#	root /var/www/certbot;
    #}

    location /api {
        # prevent dns caching and force nginx to make a dns lookup on each request.
        set $target1 http://be;
        proxy_pass $target1;
    }
	
    location /hub {
        # prevent dns caching and force nginx to make a dns lookup on each request.
        set $target1 http://be;
        proxy_pass $target1;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
    }

    server_name jayceegriffith.com;

    ssl_certificate /etc/nginx/ssl/live/jayceegriffith.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/jayceegriffith.com/privkey.pem;
}

# server {
    # listen 80;
    # listen [::]:80;

    # server_name jayceegriffith.com www.jayceegriffith.com;
    # server_tokens off;

    # location /.well-known/acme-challenge/ {
		# allow all;
        # root /usr/share/nginx/html;
    # }

    # location / {
        # return 301 https://jayceegriffith.com$request_uri;
    # }
# }
